name: Frontend Tests
on:
  pull_request:
    branches: [master]
    # paths:
    #   - 'packages/frontend/*'
env:
  cwd: packages/frontend

##############################################################

jobs:
  tests:
    name: Tests
    strategy:
      matrix:
        # os: [ubuntu-latest, macOS-latest, windows-latest]
        # browsers: [chrome, firefox, safari, edge]
        ci_browser:
        - Chrome
        # Firefox is flaky in Github........
        # - Firefox

    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1
    - name: Install
      working-directory: ${{ env.cwd }}
      run: yarn install

    - name: Test
      working-directory: ${{ env.cwd }}
      env:
        CI_BROWSER: ${{ matrix.ci_browser }}
      run: ./scripts/test-with-coverage.sh

    - name: Upload Coverage to Coveralls
      uses: coverallsapp/github-action@v1.0.1
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: ./packages/frontend/coverage/lcov.info

##############################################################

  # embroider_tests:
  #   name: "E M B R O I D E R"
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15

  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: rwjblue/setup-volta@v1
  #   - name: Install
  #     working-directory: ${{ env.cwd }}
  #     run: yarn install

  #   - name: Test
  #     working-directory: ${{ env.cwd }}
  #     env:
  #       CI_BROWSER: 'Chrome'
  #       EMBROIDER: 'true'
  #     run: ./scripts/test-with-coverage.sh
  #     continue-on-error: true

##############################################################

  bundle_analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1

    - name: Install
      working-directory: ${{ env.cwd }}
      run: yarn install

    - name: Analyze Bundle
      working-directory: ${{ env.cwd }}
      run: yarn analyze

    - name: Upload Bundle Analysis Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: built_bundle_analysis
        path: packages/frontend/public/


  build_app:
    name: Build App
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1
    - name: Install and Build
      run: |
        ( cd packages/frontend && yarn install && yarn build:production )
        cp ./scripts/_redirects packages/frontend/dist

    - name: Upload App Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: built_app
        path: packages/frontend/dist/

##############################################################

#   tests_visual:
#     name: Visual Tests
#     runs-on: ubuntu-latest
#     timeout-minutes: 15

#     steps:
#     - uses: actions/checkout@v2
#     - uses: rwjblue/setup-volta@v1

#     - name: Install
#       working-directory: ${{ env.cwd }}
#       run: yarn install

#     - name: Test
#       working-directory: ${{ env.cwd }}
#       if: github.event == 'pull_request'
#       env:
#         PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
#       run: PERCY_ENABLE=1 time yarn test --filter Acceptance

##############################################################

#   tests_e2e:
#     name: E2E Tests
#     runs-on: ubuntu-latest
#     timeout-minutes: 15

#     steps:
#     - name: 'Wait for status checks'
#       id: waitforstatuschecks
#       uses: "WyriHaximus/github-action-wait-for-status@f8bbe3bb321919ec6a009bc98121f39874dc8ee0"
#       with:
#         ignoreActions: tests_e2e,"E2E Tests"
#         checkInterval: 30

#     - uses: actions/checkout@v2
#     - uses: rwjblue/setup-volta@v1

#     - name: Test
#       working-directory: packages/smoke-tests
#       run: yarn && yarn test --target pull-request --headless


##############################################################
  deploy_preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [tests, bundle_analysis]

    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1

    - name: Download Built Bundle Analysis Artifacts
      uses: actions/download-artifact@master
      with:
        name: built_bundle_analysis
        path: packages/frontend/public/

    - name: Download Built App Artifacts
      uses: actions/download-artifact@master
      with:
        name: built_app
        path: packages/frontend/dist/

    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v1.0
      with:
        publish-dir: './packages/frontend/dist/'
        production-branch: __handled_separately__
        github-token: ${{ secrets.GITHUB_TOKEN }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

##############################################################

  lhci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: [build_app]

    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1

    - name: Download Built App Artifacts
      uses: actions/download-artifact@master
      with:
        name: built_app
        path: packages/frontend/dist/

    - name: run Lighthouse
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      run: |
        volta install @lhci/cli@0.3.x
        cd packages/frontend

        lhci collect \
          --upload.target=temporary-public-storage \
          --staticDistDir=./dist \
          --githubToken $GITHUB_TOKEN \
          --githubAppToken $LHCI_GITHUB_APP_TOKEN
