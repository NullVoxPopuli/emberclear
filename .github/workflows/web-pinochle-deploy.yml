name: Web Pinochle Deploy
on:
  push:
    branches: [master]
    paths:
    - 'client/web/pinochle/**'

env:
  cwd: client/web/pinochle

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1

    - name: Install
      working-directory: ${{ env.cwd }}
      run: yarn install

    - name: Test
      working-directory: ${{ env.cwd }}
      # run: ./scripts/test-with-coverage.sh
      run: yarn ember test

    # Coverage Disabled while these are worked out:
    # https://github.com/babel/ember-cli-babel/issues/350
    # https://github.com/kategengler/ember-cli-code-coverage/issues/265
    # - name: Upload Coverage to Coveralls
    #   uses: coverallsapp/github-action@v1.0.1
    #   with:
    #     github-token: ${{ secrets.github_token }}
    #     path-to-lcov: ./client/web/emberclear/coverage/lcov.info

    # - name: Upload Coverage Artifacts
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: coverage
    #     path: client/web/emberclear/coverage/

  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
    - tests

    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1

    # - name: Download Coverage Artifacts
    #   uses: actions/download-artifact@v1
    #   with:
    #     name: coverage
    #     path: client/web/emberclear/coverage/

    - name: Install
      working-directory: ${{ env.cwd }}
      run: yarn install

    - name: Deploy to Netlify
      env:
        FRONTEND: ${{ env.cwd }}
        NETLIFY_ACCESS_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_PINOCHLE }}
        NETLIFY_CLI_VERSION: 0.4.0
      run: |
        COVERAGE_DIR="${{ env.cwd }}/coverage"

        if [ -d "$COVERAGE_DIR" ]; then
          mv $COVERAGE_DIR ${{ env.cwd }}/public/
        fi

        ( cd ${{ env.cwd }} \
          && time yarn build:production
        )

        time ./scripts/publish

    - name: Upload Built Asset Artifacts
      uses: actions/upload-artifact@master
      with:
        name: frontend-assets
        path: ${{ env.cwd }}/dist/

  # tests_e2e:
  #   name: E2E Tests
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   needs:
  #   - deploy

  #   steps:
  #   - name: 'Wait for status checks'
  #     id: waitforstatuschecks
  #     uses: "wyrihaximus/github-action-wait-for-status@v2"
  #     with:
  #       ignoreActions: tests_e2e,"E2E Tests"
  #       checkInterval: 30

  #   - uses: actions/checkout@v2
  #   - uses: volta-cli/action@v1

  #   - name: Test
  #     run: |
  #       cd client/web/smoke-tests \
  #       && yarn \
  #       && yarn test --headless


# Deploy via Script (requires docker environment on VM)
#     - uses: actions/docker/cli@master
#     - name: Publish to DockerHub
#       env:
#         DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
#         DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
#         # DOCKER_HOST: tcp://docker:2375/
#         # DOCKER_DRIVER: overlay2
#       run: sh ./scripts/dockerhub



