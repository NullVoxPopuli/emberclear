name: Frontend
on:
  push:
    branches: [master]
    paths:
      - 'packages/frontend/*'
  pull_request:
    branches: [master]
    paths:
      - 'packages/frontend/*'

jobs:
  security:
    name: Security
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Install
      run: npm install -g snyk
    - name: Snyk
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: cd packages/frontend && snyk test --severity-threshold=high

  quality:
    name: Quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Install
      run: ./run yarn install
    - name: "Lint JS/TS"
      run: ./run yarn lint:js
    - name: Lint Templates
      run: ./run yarn lint:hbs
    - name: Lint Styles
      run: ./run yarn lint:sass
    - name: Lint Translations
      run: ./run yarn lint:i18n
    - name: Type Checking
      run: ./run yarn lint:types

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Install
      run: ./run yarn install
    - name: Test
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      run: time ./run yarn test

  tests_visual:
    name: Visual Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Install
      run: ./run yarn install
    - name: Test
      if: github.event == 'pull_request'
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      run: PERCY_ENABLE=1 time ./run yarn test --filter Acceptance

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Install
      run: ./run yarn install
    - name: Analyze Bundle
      run: time ./run yarn analyze
    - name: Deploy to Netlify
      env:
        FRONTEND: packages/frontend
        NETLIFY_ACCESS_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      run: |
        mv ${FRONTEND}/coverage public/
        cp ${FRONTEND}/public/bundle.html ${CI_PROJECT_DIR}/packages/frontend/dist/bundle.html
        cp ${FRONTEND}/public/bundle.html public/bundle.html
        time ./scripts/publish

  deploy_docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Publish to DockerHub
      env:
        DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
      run: sh ./scripts/dockerhub



