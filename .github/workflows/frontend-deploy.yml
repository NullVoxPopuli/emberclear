name: Frontend Deploy
on:
  push:
    branches: [master]
    # paths:
    #   - 'packages/frontend/*'
env:
  cwd: packages/frontend

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1

    - name: Install
      working-directory: ${{ env.cwd }}
      run: yarn install

    - name: Test
      working-directory: ${{ env.cwd }}
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      run: ./scripts/test-with-coverage.sh

    - name: Upload Coverage to Coveralls
      uses: coverallsapp/github-action@v1.0.1
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: ./packages/frontend/coverage/lcov.info

    - name: Upload Coverage Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: coverage
        path: packages/frontend/coverage/

  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
    - tests

    steps:
    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1

    - name: Download Coverage Artifacts
      uses: actions/download-artifact@v1
      with:
        name: coverage
        path: packages/frontend/coverage/
    - name: Install
      working-directory: ${{ env.cwd }}
      run: yarn install

    - name: Deploy to Netlify
      env:
        FRONTEND: packages/frontend
        NETLIFY_ACCESS_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_CLI_VERSION: 0.4.0
      run: |
        mv packages/frontend/coverage packages/frontend/public/

        ( cd packages/frontend \
          && time yarn analyze \
          && time yarn build:production
        )

        time ./scripts/publish

    - name: Upload Built Asset Artifacts
      uses: actions/upload-artifact@master
      with:
        name: frontend-assets
        path: packages/frontend/dist/

  deploy_docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: [tests, deploy]
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@v2
    - name: Download Built Asset Artifacts
      uses: actions/download-artifact@master
      with:
        name: frontend-assets
        path: packages/frontend/dist/

    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: nullvoxpopuli/emberclear
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        snapshot: true
        workdir: packages/frontend
        dockerfile: Dockerfile.release

  tests_e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
    - deploy

    steps:
    - name: 'Wait for status checks'
      id: waitforstatuschecks
      uses: "WyriHaximus/github-action-wait-for-status@f8bbe3bb321919ec6a009bc98121f39874dc8ee0"
      with:
        ignoreActions: tests_e2e,"E2E Tests"
        checkInterval: 30

    - uses: actions/checkout@v2
    - uses: rwjblue/setup-volta@v1

    - name: Test
      run: |
        cd packages/smoke-tests \
        && yarn \
        && yarn test --headless


# Deploy via Script (requires docker environment on VM)
#     - uses: actions/docker/cli@master
#     - name: Publish to DockerHub
#       env:
#         DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
#         DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
#         # DOCKER_HOST: tcp://docker:2375/
#         # DOCKER_DRIVER: overlay2
#       run: sh ./scripts/dockerhub



